{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAEL,E,MAAUC,GAClC,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,EACFK,EAAQF,GAERG,EAAOH,EAAA,GAGb,CAEaI,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIZ,EAAQa,OAAOF,EAAEG,cAAcd,MAAMe,OACrCC,EAAOH,OAAOF,EAAEG,cAAcE,KAAKD,OACnCE,EAASJ,OAAOF,EAAEG,cAAcG,OAAOF,OAE3C,IAAK,IAAIhB,EAAW,EAAGA,GAAYkB,EAAQlB,IACzCD,EAAcC,EAAUC,GACrBkB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,YAAW,KACTvB,EAAAwB,OAAOC,QAAQ,uBAAuBtB,QAAeC,MAAW,CAC9DsB,SAAS,GACX,GACCtB,EAAA,IAEJuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBmB,YAAW,KACTvB,EAAAwB,OAAOI,QAAQ,sBAAsBzB,QAAeC,MAAW,CAC7DsB,SAAS,GACX,GACCtB,EAAA,IAEPA,GAASgB,CAEb,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    } else {\n      reject(objectPromise);\n    }\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  let step = Number(e.currentTarget.step.value);\n  let amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n            useIcon: false,\n          });\n        }, delay);\n      });\n    delay += step;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","step","amount","then","setTimeout","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.9e902ca1.js.map"}